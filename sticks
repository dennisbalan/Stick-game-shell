#!/bin/bash

#choose number of sticks

function getNumSticks {
      read -p "How many stick you want?" numSticks
      while [[ $numSticks -lt 10 ]]
      do
	 #while numSticks is less than 10, tells user to pick 10 or more sticks
          echo "Sorry. You need 10 sticks or more"
          read -p "How many sticks you want man?" numSticks
      done
      echo $numSticks "is the number of sticks"
      exit $numSticks
}
#decides who goes first

function whoGoesFirst {
   #read -p turnFirst

   
   while [[ 1 == 1 ]] #forever loop
  do 
 #variable turnFirst is typed in. 
  read -p "Type in u for user if you want to go first, or c for computer if you want to go second after me: "  turnFirst

      
	
	#computer turn. Is chosen if turnFirst is c
        if [[ "$turnFirst" == "c" ]]
           then
             break
        
        #user turn. Is chosen after turnFirst is u
      elif [[ "$turnfirst" == "u" ]]
	  then 
		break
      
         fi
         done 
         echo $turnFirst 
 }
#This isthe computer Turn function. If the number of sticks is divisble by 5 it takes 1 stick
#Else it takes modulo 5 amount of sticks
function computerTurn(){
        b=$(($1%5))
        if [[ $b -eq 0 ]]
        then
             d=$(($1-1))
             s=$d
             return $s
        else
             f=$(($1%5))
             e=$(($1-f))
             h=$e
             return $h
        fi
#prints out the number of sticks
        i=1
        while [[ $i -le $1 ]]
        do
        	echo -n "|"
        	i=$((i+1))

	done
	echo -e -n "($1)\n"

}
#user turn 
function userTurn {
#Checks the number of sticks the user inputs the first time. There must be between 1 and 4 sticks
read -p "Please type in the number of sticks you need. Do not take more than 4 sticks" userSticks
if [[ $userSticks -ge 1 ]] && [[ $userSticks -le 4 ]]
then
    c=$(($1-userSticks))
    return $c
else
#Checks the number of sticks again. If fail, forfeit
  echo  "You should type an amount between 1 and 4."
  read -p "please type in u if you want to go first, c for computer if you want to go later" userSticks
  if [[ $userSticks -ge 1 ]] && [[ $userSticks -le 4 ]]
  then 
    #I think that this is the wrong format
    y=$(($1-userSticks))
    return $y
   #forfeit
   echo "You have forfeited the game"
   z=0
   return $z
   fi
fi
#prints the number of sticks
 i=1
        while [[ $i -le $1 ]]
        do
                echo -n "|"
                i=$((i+1))

        done
        echo -e -n "($1)\n"

}
#checks to see if computer has 0 sticks. 0 sticks means it wins
function didComputerWin {
if [[ $1 -eq 0 ]]
then
  echo I won
  #adds special victory code -1
  k=-1
  return $k
fi
}
#checks to see if user has 0 sticks. 0 sticks means user wins
function didUserWin {
if [[ $1 -eq 0 ]]
then
  echo you won
#special victory code -1
  jk=-1
  return $jk
fi
}





#main
#welcome
echo Welcome to the great game of sticks
#do intro
#choose number of sticks
n=`getNumSticks`
#choose who goes first
t=`whoGoesFirst`
#game loops util gameover is 0. gameover is 0 when someone wins
if [[ "$t" == "c" ]]
then 
ct=`computerTurn $n`
n=$ct
fi
gameover=0
while [[ $gameover -eq 0 ]]
    do
	
       
	
      x=$n
       #if user goes
         #user turn
 uta=`userTurn $x`
	#forfeit/gameover check
     		 if [[ $ut -eq 0 ]]
       then

	gameover=1
          break
       		fi

      #gameover check
     uw=`didUserWin $ut`
	if [[ $uw -eq -1 ]]
       then
	  gameover=1
          break
       fi
	#computer turn
      cta=`computerTurn $ut` 
      cw=`didComputerWin $cta`
	#gameover check
	if [[ $cw -eq -1 ]]
       then
	gameover=1
          break
       fi
      #reinitialize x
      x=$cta

done

